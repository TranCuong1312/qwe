DROP DATABASE IF EXISTS SELLING_CARS;
CREATE DATABASE IF NOT EXISTS SELLING_CARS;
USE SELLING_CARS;

DROP TABLE IF EXISTS CUSTOMERS;
CREATE TABLE IF NOT EXISTS CUSTOMERS
(
	CUSTOMERID	CHAR(3)		NOT NULL,
    `NAME`		VARCHAR(30)	NOT NULL,
    PHONE		CHAR(10)	NOT NULL,
    EMAIL		VARCHAR(30)	NOT NULL,
    ADDRESS		VARCHAR(50)	NOT NULL,
    NOTE		VARCHAR(100)		,
    PRIMARY KEY(CUSTOMERID)
);

DROP TABLE IF EXISTS CARS;
CREATE TABLE IF NOT EXISTS CARS
(
	CARID	CHAR(4)		NOT NULL,
    MAKER	ENUM('TOYOTA','HONDA','NISSAN')	NOT NULL,
    MODEL	VARCHAR(10)	NOT NULL,
    `YEAR`	YEAR 		NOT NULL,
    COLOR	VARCHAR(8)	NOT NULL,
    CARNOTE	VARCHAR(50)			,
    PRIMARY KEY(CARID)
);
    

DROP TABLE IF EXISTS ORDERS;
CREATE TABLE IF NOT EXISTS ORDERS
(
	ORDERID			CHAR(3)			NOT NULL,
    CUSTOMERID		CHAR(3)			NOT NULL,
    CARID			CHAR(4)			NOT NULL,
    AMOUNT			SMALLINT		DEFAULT '1',
    SALEPRICE		REAL			NOT NULL,
    ORDERDATE		DATETIME		NOT NULL,
    DELIVERYDATE	DATETIME				,
    DELIVERYADDRESS	VARCHAR(50)		NOT NULL,
    `STATUS`		ENUM('0','1','2')		,
    NOTE			VARCHAR(100)			,
    PRIMARY KEY(ORDERID),
    FOREIGN KEY(CUSTOMERID) REFERENCES	CUSTOMERS(CUSTOMERID),
    FOREIGN KEY(CARID)		REFERENCES	CARS(CARID)
);

DELIMITER $$

CREATE TRIGGER INSERT_CUSTOMERS
BEFORE INSERT ON CUSTOMERS
FOR EACH ROW
BEGIN
	
    IF NEW.EMAIL NOT LIKE '%@%' THEN
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = 'NHAP LAI';
    END IF;
    
END $$
DELIMITER ;

DELIMITER $$

CREATE TRIGGER INSERT_CARS
BEFORE INSERT ON CARS
FOR EACH ROW
BEGIN
	
    IF NEW.`YEAR`>2019 OR NEW.`YEAR`<2000 THEN
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = 'NHAP LAI';
    END IF;
    
END $$
DELIMITER ;

/*6*/

DELIMITER $$

CREATE TRIGGER INSERT_ORDERS
BEFORE INSERT ON ORDERS
FOR EACH ROW
BEGIN

	IF NEW.DELIVERYDATE<=NEW.ORDERDATE +15 THEN
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = 'NHAP LAI';
    END IF;
    
END $$
DELIMITER ;

INSERT INTO CUSTOMERS(CUSTOMERID, `NAME`,PHONE,EMAIL,ADDRESS,NOTE)
VALUES  			 (     'C01','NORTH','0123456789','NORTH@GMAIL.COM','NORTH', NULL),
					 (     'C02','SOUTH','9876543210','SOUTH@GMAIL.COM','SOUTH', NULL),
                     (	   'C03', 'WEST','1234567890','WEST@GMAIL.COM','WEST', NULL),
                     (	   'C04', 'EAST','4567890123','EAST@GMAIL.COM', 'EAST',NULL),
                     (	   'C05','NORTH-WEST','7890123456','NORTH-WEST@GMAIL.COM','NORTH-WEST',NULL),
                     (	   'C06','NORTH-EAST','1472583690','NORTH-EAST@GMAIL.COM','NORTH-EAST',NULL),
                     (	   'C07','SOUTH-WEST','2583691470','SOUTH-WEST@GMAIL.COM', 'SOUTH-WEST',NULL),
                     (	   'C08','SOUTH-EAST','3691472580','SOUTH-EAST@GMAIL.COM','SOUTH-EAST', NULL),
                     (	   'C09','CENTRAL','9999999999','CENTRAL@GMAIL.COM','CENTRAL', NULL),
                     (	   'C10','NOWHERE','0000000000','NOWHERE@GMAIL.COM', 'NOWHERE',NULL);
                     
INSERT INTO CARS(CARID,MAKER,MODEL,`YEAR`,COLOR, CARNOTE	)
VALUES			('CAR1','HONDA','A1','2010','BLUE', NULL),
				('CAR2','TOYOTA','A2','2011','BLACK',NULL),
                ('CAR3','NISSAN','B1','2008','RED', NULL),
                ('CAR4','NISSAN','B2','2013','GOLD',NULL);
                
INSERT INTO ORDERS(ORDERID,CUSTOMERID,CARID,AMOUNT,SALEPRICE,ORDERDATE,DELIVERYDATE,DELIVERYADDRESS,`STATUS`,NOTE)
VALUES			  (  'O01',     'C01','CAR1',    1, 30000, '2018/11/20','2019/11/30','NORTH','1',NULL),
				  (  'O02',     'C02','CAR2',    1, 40000, '2017/11/20','2019/11/30','SOUTH', '0',NULL),
                  (  'O03',     'C03','CAR3',    1, 50000, '2019/11/20','2019/11/30','WEST', '2',NULL),
                  (  'O04',     'C04','CAR4',    1, 60000, '2019/9/20','2019/10/30','EAST', '2',NULL),
                  (  'O06',     'C04','CAR4',    1, 60000, '2019/9/20',NULL,'EAST', '1',NULL),
                  (  'O05',     'C10','CAR4',    10, 600000, '2019/11/20','2019/12/30','NOWHERE', NULL,NULL);
                  
/*2*/

SELECT C.`NAME`,O.CUSTOMERID,SUM(O.AMOUNT) AS AMOUNT,CARID
FROM ORDERS O
JOIN CUSTOMERS C ON C.CUSTOMERID=O.CUSTOMERID
GROUP BY O.CUSTOMERID
ORDER BY SUM(O.AMOUNT);

/*3*/

CREATE VIEW RAW3 AS
SELECT C.`NAME`,O.CUSTOMERID,SUM(O.AMOUNT) AS AMOUNT,O.CARID
FROM ORDERS O
JOIN CUSTOMERS C ON C.CUSTOMERID=O.CUSTOMERID
GROUP BY O.CUSTOMERID
ORDER BY SUM(O.AMOUNT);

DROP PROCEDURE IF EXISTS TOPSALE;

DELIMITER $$

CREATE PROCEDURE TOPSALES()
BEGIN

	SELECT MAX(AMOUNT)
    FROM (SELECT CA.MAKER, SUM(R.AMOUNT) AS AMOUNT
          FROM CARS CA
		  JOIN RAW3 R ON R.CARID=CA.CARID
          GROUP BY CA.MAKER) AS RAW33;
    
END $$

CALL TOPSALES();

/*4*/



DROP PROCEDURE IF EXISTS DROP_OLDONES;
DELIMITER $$

CREATE PROCEDURE DROP_OLDONES()
BEGIN
	
    DECLARE CURYEAR YEAR;
    SET CURYEAR=YEAR(CURDATE());
    
    
    DELETE FROM ORDERS
    WHERE `STATUS`='2' AND DELIVERYDATE IS NULL OR YEAR(ORDERDATE)<CURYEAR-5;
    
                                       
     SELECT ROW_COUNT();                                  


END $$

DELIMITER ;

CALL DROP_OLDONES();

/*5*/

DELIMITER $$
CREATE PROCEDURE DON_HANG(IN CUSTOMER_ID CHAR(3))
BEGIN

	SELECT C.CUSTOMERID,C.`NAME`,O.ORDERID,O.AMOUNT,CA.MAKER
    FROM CUSTOMERS C
    JOIN ORDERS O ON C.CUSTOMERID=O.CUSTOMERID
    JOIN CARS CA ON O.CARID=CA.CARID
    WHERE C.CUSTOMERID=CUSTOMER_ID;
    
END $$

DELIMITER ;

CALL DON_HANG();







    
    
    
	
    




